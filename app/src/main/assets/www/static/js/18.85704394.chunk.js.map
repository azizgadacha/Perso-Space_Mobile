{"version":3,"sources":["hooks/useScriptRef.js","verification_password/password-strength.js","composant_de_style/AuthWrapper1.js","composant_de_style/AuthCardWrapper1.js","views/verif_password/RestVerif.js","views/verif_password/index.js"],"names":["useScriptRef","scripted","useRef","useEffect","current","strengthColor","count","label","color","value","errorMain","warningDark","orangeMain","successMain","successDark","strengthIndicator","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","AuthWrapper1","styled","backgroundColor","theme","palette","primary","light","minHeight","AuthCardWrapper","children","other","maxWidth","window","location","pathname","includes","hash","classes","makeStyles","card","flexGrow","flexBasis","breakpoints","down","margin","content","padding","spacing","useStyles","className","contentClass","redButton","fontSize","fontWeight","grey","border","borderColor","textTransform","signDivider","signText","cursor","loginIcon","marginRight","loginInput","typography","customInput","RestRegister","others","history","useHistory","dispatcher","useDispatch","token","useParams","scriptedRef","matchDownSM","useMediaQuery","React","useState","showPassword","setShowPassword","strength","setStrength","level","setLevel","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","temp","Fragment","initialValues","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","axios","post","configData","API_SERVER","then","response","success","data","msg","push","type","payload","text","severity","catch","error","err","console","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","Grid","container","item","xs","FormControl","fullWidth","Boolean","InputLabel","htmlFor","OutlinedInput","id","name","onBlur","onChange","e","target","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","inputProps","notchedOutline","FormHelperText","Box","sx","mb","alignItems","width","height","borderRadius","Typography","variant","mt","Alert","AnimateButton","Button","disableElevation","disabled","size","Verification","setSucess","setErr","useTheme","activationmail","a","result","direction","justifyContent","m","sm","AuthCardWrapper1","to","Logo","Stack","secondary","main","gutterBottom","textAlign","RestVerif","Divider"],"mappings":"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","file":"static/js/18.85704394.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\n//-----------------------|| ELEMENT REFERENCE HOOKS  ||-----------------------//\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","/**\r\n * Password validator for login pages\r\n */\r\n\r\nimport value from '../assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber = (value) => {\r\n    return new RegExp(/[0-9]/).test(value);\r\n};\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (value) => {\r\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\r\n};\r\n\r\n// has special chars\r\nconst hasSpecial = (value) => {\r\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\r\n};\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (value) => {\r\n    let strengths = 0;\r\n    if (value.length > 5) strengths++;\r\n    if (value.length > 7) strengths++;\r\n    if (hasNumber(value)) strengths++;\r\n    if (hasSpecial(value)) strengths++;\r\n    if (hasMixed(value)) strengths++;\r\n    return strengths;\r\n};\r\n","// material-ui\r\nimport { styled } from '@material-ui/styles';\r\n\r\n//-----------------------|| AUTHENTICATION 1 WRAPPER ||-----------------------//\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.light,\r\n    minHeight: '80vh',\r\n\r\n\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n// project import\r\nimport MainCard from './../composant_de_style/cards/MainCard';\r\n\r\n// style constant\r\n\r\n\r\n//-----------------------|| AUTHENTICATION CARD WRAPPER 1 ||-----------------------//\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => {\r\n    let loc\r\n    if(window.location.pathname.includes('html'))\r\n        loc=window.location.hash\r\n    else\r\n        loc=window.location.pathname\r\n    const maxWidth=((loc.includes('/login'))?\"1050px\":'475px')\r\n    const useStyles = makeStyles((theme) => ({\r\n        card: {\r\n\r\n            maxWidth,\r\n            '& > *': {\r\n                flexGrow: 1,\r\n                flexBasis: '50%'\r\n            },\r\n            [theme.breakpoints.down('sm')]: {\r\n                margin: '20px'\r\n            },\r\n            [theme.breakpoints.down('lg')]: {\r\n                maxWidth: '400px'\r\n            },\r\n        },\r\n        content: {\r\n            padding: theme.spacing(5) + ' !important',\r\n            [theme.breakpoints.down('lg')]: {\r\n                padding: theme.spacing(3) + ' !important'\r\n            }\r\n        }\r\n    }));\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\r\n            {children}\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\nexport default AuthCardWrapper;\r\n","import React, { useEffect } from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\n\r\nimport configData from '../../config';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControl,\r\n\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@material-ui/core';\r\n\r\n// validation des champs\r\nimport * as Yup from 'yup';\r\n\r\n\r\n//pour lea gestion du formulaire\r\nimport { Formik } from 'formik';\r\n//api pou le contact avec le back-end\r\nimport axios from 'axios';\r\n\r\n// project imports\r\n\r\n//use ref ta3mil ref  lil objet   min il react\r\nimport useScriptRef from '../../hooks/useScriptRef';\r\nimport AnimateButton from './../../animation/AnimateButton';\r\nimport { strengthColor, strengthIndicator } from '../../verification_password/password-strength';\r\n\r\n// assets\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport {Alert} from \"@material-ui/lab\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    redButton: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.grey[50],\r\n        border: '1px solid',\r\n        borderColor: theme.palette.grey[100],\r\n        color: theme.palette.grey[700],\r\n        textTransform: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.light\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '0.875rem'\r\n        }\r\n    },\r\n    signDivider: {\r\n        flexGrow: 1\r\n    },\r\n    signText: {\r\n        cursor: 'unset',\r\n        margin: theme.spacing(2),\r\n        padding: '5px 56px',\r\n        borderColor: theme.palette.grey[100] + ' !important',\r\n        color: theme.palette.grey[900] + '!important',\r\n        fontWeight: 500\r\n    },\r\n    loginIcon: {\r\n        marginRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '8px'\r\n        }\r\n    },\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst RestRegister = ({ ...others }) => {\r\n\r\nlet history =useHistory()\r\n\r\n    const dispatcher = useDispatch();\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    let {token}=useParams()\r\n\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n    const [strength, setStrength] = React.useState(0);\r\n    const [level, setLevel] = React.useState('');\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changePassword = (value) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n\r\n    useEffect(() => {\r\n        changePassword('123456');\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Formik\r\n\r\n\r\n            initialValues={{\r\n\r\n                    password: '',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={(values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n\r\n\r\n                        axios\r\n                            .post( configData.API_SERVER + 'api/Forget/change', {token,password: values.password})\r\n                            .then(function (response) {\r\n\r\n                                setStatus({ success: true });\r\n                                setErrors({ submit: response.data.msg });\r\n                                setSubmitting(false);\r\n                                history.push(\"/login\")\r\n                                dispatcher({\r\n                                    type:\"Click\",\r\n                                    payload: {text:\"the password has been sent\",severity:\"success\"}\r\n                                });\r\n\r\n                            })\r\n                            .catch(function (error) {\r\n                                setStatus({ success: false });\r\n                                setErrors({ submit: error.response.data.msg });\r\n                                setSubmitting(false);\r\n\r\n\r\n                            });\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <Grid container spacing={matchDownSM ? 0 : 2}>\r\n                            <Grid item xs={12}>\r\n\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n                        <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-register\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={(e) => {\r\n                                    handleChange(e);\r\n                                    changePassword(e.target.value);\r\n                                }}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\r\n                                    {errors.password}\r\n                                </FormHelperText>\r\n\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {strength !== 0 && (\r\n                            <FormControl fullWidth>\r\n                                <Box\r\n                                    sx={{\r\n                                        mb: 2\r\n                                    }}\r\n                                >\r\n                                    <Grid container spacing={2} alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            <Box\r\n                                                backgroundColor={level.color}\r\n                                                sx={{\r\n                                                    width: 85,\r\n                                                    height: 8,\r\n                                                    borderRadius: '7px'\r\n                                                }}\r\n                                            ></Box>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\r\n                                                {level.label}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </FormControl>\r\n                        )}\r\n\r\n\r\n                        {errors.submit && (\r\n                            <Box\r\n                                sx={{\r\n                                    mt: 3\r\n                                }}\r\n                            >\r\n                                <Alert variant=\"filled\" severity=\"error\">\r\n                                    {errors.submit}</Alert>\r\n\r\n\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box\r\n                            sx={{\r\n                                mt: 2\r\n                            }}\r\n                        >\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Change it\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default RestRegister;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Link as RouterLink, useHistory, useParams} from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/core';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\r\n\r\n// project imports\r\n\r\n// style\r\nimport AuthWrapper1 from './../../composant_de_style/AuthWrapper1';\r\nimport Logo from './../../assets/Logo';\r\nimport RestVerif from './RestVerif';\r\nimport axios from \"axios\";\r\nimport configData from \"../../config\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport AuthCardWrapper1 from \"../../composant_de_style/AuthCardWrapper1\";\r\n\r\n\r\n\r\n// assets\r\n\r\n//================================|| LOGIN MAIN ||================================//\r\nconst Verification = () => {\r\n    const dispatcher = useDispatch();\r\n\r\n    let {token}=useParams()\r\n    let history=useHistory()\r\n\r\n    const [success,setSucess]=useState(false)\r\n    const [err,setErr]=useState(true)\r\n\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\nuseEffect(()=>{\r\n\r\n    const activationmail=async ()=>{\r\n\r\nif(!token){\r\n\r\n    dispatcher({\r\n        type: \"Click\",\r\n        payload: {text: \"lien invalid\", severity: 'error'}\r\n    });\r\n\r\n    history.push(\"/login\")\r\n\r\n}else\r\n{\r\n        try {\r\n    let result = await axios\r\n        .post(configData.API_SERVER + 'api/Forget/validation', {token,})\r\n    setSucess(result.data.success)\r\n\r\n    if(!result.data.success) {\r\n        dispatcher({\r\n            type: \"Click\",\r\n            payload: {text: \"lien invalid\", severity: 'error'}\r\n        });\r\n\r\n        history.push(\"/login\")\r\n    }\r\n\r\n}catch (err)\r\n{\r\n    dispatcher({\r\n        type: \"Click\",\r\n        payload: {text: \"lien invalid\", severity: 'error'}\r\n    });\r\n\r\n    history.push(\"/login\")\r\n    err.response.data.success&&setErr(err.response.data.success)\r\n}}\r\n    }\r\n   activationmail()\r\n\r\n},[])\r\n\r\n    return (\r\n\r\n        success &&(\r\n\r\n        <AuthWrapper1>\r\n\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper1>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <RouterLink to=\"#\">\r\n                                            <Logo />\r\n                                        </RouterLink>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                     Reinstall password\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                                                        Enter your new password\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                         </Grid>\r\n                                     <Grid item xs={12}>\r\n                                        <RestVerif />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper1>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    ));\r\n};\r\n\r\nexport default Verification;\r\n"],"sourceRoot":""}