{"version":3,"sources":["hooks/useScriptRef.js","verification_password/password-strength.js","views/ViewAll/import/customer/Iconify.js","views/ViewAll/import/customer/SearchNotFound.js","views/modal/Modal_delete/index.js","views/modal/EditModalHeder/EditModal.js","composant_de_style/cards/Skeleton/tableSkelton/UserListToolbarSkelton.js","views/modal/ModalDeleteWidgetUser/DeleteModal.js","views/modal/ModalDeleteWidgetUser/index.js","views/ViewAll/import/customer/@dashboard/user/UserListHead.js","views/ViewAll/import/customer/@dashboard/user/UserListToolbar.js","views/modal/Visualization_Info/index.js","views/modal/EditUser/EditModalCore.js","views/modal/EditUser/index.js","views/ViewAll/cells.js","views/modal/RegistreModal/index.js","composant_de_style/cards/Skeleton/Static_Data/Static.js","composant_de_style/cards/Skeleton/tableSkelton/TableSkelton.js","views/ViewAll/User.js"],"names":["useScriptRef","scripted","useRef","useEffect","current","strengthColor","count","label","color","value","errorMain","warningDark","orangeMain","successMain","successDark","strengthIndicator","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","Iconify","icon","sx","other","component","Icon","SearchNotFound","searchQuery","gutterBottom","align","variant","Modal_Delete","props","theme","useTheme","matchDownSM","useMediaQuery","breakpoints","down","container","direction","alignItems","justifyContent","item","spacing","palette","secondary","main","type","fontSize","textAlign","obj","username","WidgetName","name","xs","RootStyle","styled","Toolbar","height","display","padding","OutlinedInput","width","transition","transitions","create","easing","easeInOut","duration","shorter","borderWidth","borderColor","grey","UserListToolbarSkelton","numSelected","bgcolor","DeleteModalCore","link","dataSend","useState","isloading","setIsloading","account","useSelector","state","dispatcher","useDispatch","history","useHistory","id","useParams","Grid","ml","mr","mt","AnimateButton","LoadingButton","fullWidth","size","loading","loadingPosition","startIcon","Deleting","Button","disableElevation","onClick","token","user_id","user","_id","userDeleted_id","sourceDB","superiorID","idData","superior_id","axios","post","configData","API_SERVER","then","response","data","notConnected","LOGOUT","push","CLICK","payload","text","severity","success","CLOSE_DELETE_MODAL","USER_DELETE","DELETE_WIDGET","widget","defaultPath","msg","catch","error","DELETE","marginLeft","disabled","Cancel","OVERLAY_Styles","position","top","left","right","bottom","zIndex","style","maxWidth","borderRadius","radius","transform","border","User","CLOSE_MODAL","open1","modal","handleCloseModal","Modal","open","ModalDeleteState","onClose","closeAfterTransition","BackdropProps","timeout","ClickAwayListener","onClickAway","Fade","in","Box","objet","DeleteModal","UserListHead","order","orderBy","headLabel","rowCount","onRequestSort","onSelectAllClick","TableHead","TableRow","TableCell","map","headCell","alignRight","sortDirection","TableSortLabel","hideSortIcon","active","property","event","visuallyHidden","SearchStyle","UserListToolbar","filterName","onFilterName","Typography","onChange","placeholder","startAdornment","InputAdornment","Tooltip","title","IconButton","mb","OPEN_MODAL","backgroundColor","minWidth","boxShadow","pt","px","pb","useStyles","makeStyles","redButton","fontWeight","textTransform","primary","light","signDivider","flexGrow","signText","cursor","margin","loginIcon","marginRight","loginInput","typography","customInput","root","alignSelf","opacity","input","large","classes","CLOSE_MODAL_INFORMATION","handleClose","ModalInformation","BackdropComponent","Backdrop","float","FormControl","className","Avatar","src","photo","md","phone","email","role","Stack","CLOSE","EditModalCore","window","location","pathname","includes","hash","states","ClOSE_EDIT_MODAL","initialValues","validationSchema","Yup","shape","required","onSubmit","values","setErrors","setStatus","setSubmitting","submit","userID","USER_UPDATE","administratorProblem","UPDATE","err","errors","handleBlur","setFieldValue","handleChange","handleSubmit","isSubmitting","touched","noValidate","lg","sm","Boolean","TextField","select","SelectProps","native","onBlur","option","Alert","Changing","Change","ModalEditState","EditModal","Cells","userPar","scope","alt","noWrap","OPEN_EDIT_MODAL","OPEN_DELETE_MODAL","OPEN_MODAL_INFORMATION","largeImage","overflow","uploadBtn","lineHeight","fontFamily","React","source","setSource","scriptedRef","ModalState","max","matches","min","fd","FormData","append","parseInt","file","sendtphoto","headers","ADD_USER","message","marginBottom","accept","target","files","toLowerCase","endsWith","fileReader","FileReader","readAsDataURL","onload","e","result","handleCapture","htmlFor","gridSpacing","FormHelperText","Adding","Add","users","Array","_","index","faker","datatype","uuid","findName","emaill","TABLE_HEAD","alignLeft","SkeltonTable","page","setPage","setOrder","selected","setSelected","setOrderBy","rowsPerPage","setRowsPerPage","descendingComparator","a","b","emptyRows","Math","USERLIST","filteredUsers","array","comparator","query","stabilizedThis","el","sort","filter","_user","indexOf","applySortFilter","getComparator","TableContainer","Table","checked","newSelecteds","n","TableBody","slice","row","isItemSelected","hover","tabIndex","Skeleton","m","colSpan","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","setStrength","setLevel","temp","changePassword","userSt","setSucess","setUSERLIST","go","INISIALIZE_USER","setFilterName","toString","isUserNotFound","Card","py","Visualization_Info","RegistreModal"],"mappings":"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","file":"static/js/14.f2378c21.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\n//-----------------------|| ELEMENT REFERENCE HOOKS  ||-----------------------//\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","/**\r\n * Password validator for login pages\r\n */\r\n\r\nimport value from '../assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber = (value) => {\r\n    return new RegExp(/[0-9]/).test(value);\r\n};\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (value) => {\r\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\r\n};\r\n\r\n// has special chars\r\nconst hasSpecial = (value) => {\r\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\r\n};\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (value) => {\r\n    let strengths = 0;\r\n    if (value.length > 5) strengths++;\r\n    if (value.length > 7) strengths++;\r\n    if (hasNumber(value)) strengths++;\r\n    if (hasSpecial(value)) strengths++;\r\n    if (hasMixed(value)) strengths++;\r\n    return strengths;\r\n};\r\n","import PropTypes from 'prop-types';\r\n// icons\r\nimport { Icon } from '@iconify/react';\r\n// @mui\r\nimport { Box } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nIconify.propTypes = {\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function Iconify({ icon, sx, ...other }) {\r\n  return <Box component={Icon} icon={icon} sx={{ ...sx }} {...other} />;\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { Paper, Typography } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nSearchNotFound.propTypes = {\r\n  searchQuery: PropTypes.string\r\n};\r\n\r\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\r\n  return (\r\n    <Paper {...other}>\r\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\r\n        Not found\r\n      </Typography>\r\n      <Typography variant=\"body2\" align=\"center\">\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No results found for\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport {useTheme} from '@material-ui/core';\r\nimport { Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\r\nimport {Divider} from \"@mui/material\";\r\n\r\n// project imports\r\n\r\n\r\n// assets\r\n\r\n//===============================|| AUTH3 - AddWorkspace ||===============================//\r\nconst Modal_Styles ={\r\n    position:'fixed',\r\n    top:'50%',\r\n    left:'50%',\r\n    transform:'translate(-30%,-50%)',\r\n    backgroundColor:'#FFF',\r\n    padding:'50px',\r\n    zIndex:100\r\n}\r\nconst OVERLAY_Styles ={\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right:0,\r\n    bottom:0,\r\n    backgroundColor: 'rgba(0,0,0, .2)',\r\n    zIndex:100\r\n\r\n}\r\nconst Modal_Delete = (props) => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n        <Grid\r\n            container\r\n            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n        >\r\n            <Grid item>\r\n                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                    <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                        <Typography\r\n                            color={theme.palette.secondary.main}\r\n                            gutterBottom\r\n                            variant={matchDownSM ? 'h3' : 'h3'}\r\n                        >\r\n                            Delete {props.type}\r\n                        </Typography>\r\n                        <Divider />\r\n\r\n                        <Typography variant=\"caption\" fontSize=\"16px\" textAlign={ 'center'}>\r\n                            Are you sure to delete {props.type==\"User\"?props.obj.username: props.type==\"Widget\"?props.obj.WidgetName:props.name} ?\r\n                        </Typography>\r\n\r\n\r\n                </Stack>\r\n                </Stack>\r\n            </Grid>\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Modal_Delete;\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport {useTheme} from '@material-ui/core';\r\nimport { Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\r\n\r\n// project imports\r\n\r\n\r\n// assets\r\n\r\n//===============================|| AUTH3 - AddWorkspace ||===============================//\r\nconst Modal_Styles ={\r\n    position:'fixed',\r\n    top:'50%',\r\n    left:'50%',\r\n    transform:'translate(-30%,-50%)',\r\n    backgroundColor:'#FFF',\r\n    padding:'50px',\r\n    zIndex:100\r\n}\r\nconst OVERLAY_Styles ={\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right:0,\r\n    bottom:0,\r\n    backgroundColor: 'rgba(0,0,0, .2)',\r\n    zIndex:100\r\n\r\n}\r\nconst Modal_Delete = (props) => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\" stroke-linecap=\"round\">\r\n            <Grid item xs={12}>\r\n\r\n                <Grid\r\n                    container\r\n                    direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                >\r\n                    <Grid item>\r\n                        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                            <Typography\r\n                                color={theme.palette.secondary.main}\r\n                                gutterBottom\r\n                                variant={matchDownSM ? 'h3' : 'h2'}\r\n                            >\r\n                                Edit {props.type}\r\n                            </Typography>\r\n                            <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                                Edit {props.name}\r\n                            </Typography>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    );\r\n};\r\n\r\nexport default Modal_Delete;\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n  Toolbar,\r\n  Tooltip,\r\n  IconButton,\r\n  Typography,\r\n  OutlinedInput,\r\n  InputAdornment, Button, Skeleton\r\n} from '@mui/material';\r\n// component\r\n\r\nimport React, {Fragment} from \"react\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\r\n  height: 96,\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  padding: theme.spacing(0, 1, 0, 3)\r\n}));\r\n\r\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\r\n  width: 240,\r\n  transition: theme.transitions.create(['box-shadow', 'width'], {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter\r\n  }),\r\n  '&.Mui-focused': { width: 320 },\r\n  '& fieldset': {\r\n    borderWidth: `1px !important`,\r\n    borderColor: `${theme.palette.grey[500_32]} !important`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserListToolbarSkelton.propTypes = {\r\n  numSelected: PropTypes.number,\r\n  filterName: PropTypes.string,\r\n  onFilterName: PropTypes.func\r\n};\r\n\r\n\r\nexport default function UserListToolbarSkelton({ numSelected }) {\r\n\r\n\r\n\r\n  return (\r\n      <Fragment>\r\n    <RootStyle\r\n      sx={{\r\n        ...(numSelected > 0 && {\r\n          color: 'primary.main',\r\n          bgcolor: 'primary.lighter'\r\n        })\r\n      }}\r\n    >\r\n\r\n\r\n\r\n    </RootStyle>\r\n      </Fragment>\r\n);\r\n}\r\n","import React, {Fragment, useState} from 'react';\r\n\r\n\r\nimport configData from '../../../config';\r\n\r\n// maerial-ui\r\nimport {Box, Button, Grid,} from '@material-ui/core';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\n// project imports\r\n\r\n\r\nimport AnimateButton from '../../../animation/AnimateButton';\r\n\r\n\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {\r\n    ADD_USER,\r\n    CLICK,\r\n    CLOSE_DELETE_MODAL, DELETE,\r\n    DELETE_WIDGET, LOGOUT,\r\n    USER_DELETE\r\n} from \"../../../store/actions\";\r\nimport {LoadingButton} from \"@material-ui/lab\";\r\nimport {Cancel, Delete, Deleting} from \"../../Button/actionButton\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\n\r\n// style constant\r\n\r\n//===========================|| API JWT - REGISTER ||===========================//\r\n\r\nconst DeleteModalCore = ({obj,type}) => {\r\n\r\n    const handleCloseModal = ()=> {\r\n        dispatcher({\r\n            type:CLOSE_DELETE_MODAL,\r\n\r\n        });\r\n    };\r\n\r\n    const [isloading, setIsloading] = useState(false);\r\n    const account = useSelector((state) => state.account);\r\n\r\n    const dispatcher = useDispatch();\r\n    let history =useHistory()\r\n\r\nlet link\r\n    let dataSend\r\n\r\n\r\n\r\n\r\n\r\n    let {id}=useParams()\r\n\r\n    let Delete = () => {\r\n\r\n        if(type==\"User\")\r\n\r\n            {\r\n                link='api/User/deleteUser'\r\n\r\n                dataSend=  {token:account.token,user_id:account.user._id, userDeleted_id:obj._id}\r\n            }\r\n\r\n\r\n            else if (type==\"Widget\")\r\n            {\r\n\r\n\r\n                if(obj.sourceDB){\r\n                    link = 'api/Data/deleteLinkWidget'\r\n                    dataSend=  {token:account.token,superiorID:id,type:obj.type,WidgetName:obj.WidgetName, idData:obj.idData}}\r\n\r\n\r\n                else {\r\n                    link='api/Widget/deleteWidget'\r\n                    dataSend=  {token:account.token,WidgetName:obj.WidgetName, superiorID:obj.superior_id}}\r\n\r\n    }\r\n        setIsloading(true)\r\n\r\n//la liaison entre la partie front et la partie back se fait à travers ce bout de code durant lequel il y'aura l'envoie des données a utilisé et le type du méthode du contoller souhaité\r\n\r\n        axios\r\n            .post( configData.API_SERVER + link,dataSend)\r\n            .then(response =>{\r\n                if(response.data.notConnected){\r\n                    dispatcher({ type: LOGOUT });\r\n                    history.push(\"/login\");\r\n                    dispatcher({\r\n                        type:CLICK,\r\n                        payload: {text:\"You are no longer connected\",severity:\"error\"}\r\n                    })\r\n                }\r\n                else\r\n                {\r\n                if(response.data.success){\r\n                dispatcher({\r\n                    type:CLOSE_DELETE_MODAL,\r\n                })\r\n              if(type==\"User\"){\r\n\r\n                dispatcher({\r\n                    type:USER_DELETE,\r\n                    payload: {user:response.data.user}\r\n                })}\r\n            else {\r\n            dispatcher({\r\n             type:DELETE_WIDGET,\r\n            payload: {widget:response.data.widget}\r\n    })\r\n\r\n              }\r\n\r\n                    dispatcher({\r\n                    type:CLICK,\r\n                    payload: {text:`${type} has been deleted`,severity:\"success\"}\r\n                })\r\n\r\n                    dispatcher({\r\n                        type:CLOSE_DELETE_MODAL,\r\n                    })\r\n                }\r\n                else {\r\n                    dispatcher({\r\n                        type:CLOSE_DELETE_MODAL,\r\n                    })\r\n                    history.push(configData.defaultPath)\r\n                    dispatcher({\r\n                        type:CLICK,\r\n                        payload: {text:response.data.msg,severity:\"error\"}\r\n                    })\r\n                }\r\n\r\n\r\n\r\n\r\n            }})\r\n            .catch(function (error) {\r\n                dispatcher({\r\n                     type:CLOSE_DELETE_MODAL,\r\n                })\r\n                dispatcher({\r\n                    type:CLICK,\r\n                    payload: {text:\"internel problem please try later\",severity:\"error\"}\r\n                })\r\n\r\n            })\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n\r\n            <Grid container alignItems={\"center\"}>\r\n                <Grid xs={6}>\r\n                    <Box\r\n                        sx={\r\n\r\n\r\n                        {\r\n                            ml:0,\r\n                            mr:3,\r\n                            mt: 2,\r\n\r\n                        }}\r\n                    >\r\n                        <AnimateButton>\r\n\r\n\r\n\r\n\r\n                            {isloading?(<LoadingButton variant=\"contained\"   fullWidth size=\"large\" loading loadingPosition=\"start\" startIcon={<SaveIcon />} variant=\"outlined\">{Deleting}</LoadingButton>):\r\n                                <Button\r\n                                    disableElevation\r\n                                    fullWidth\r\n                                    onClick={Delete}\r\n                                    type=\"submit\" size=\"large\"\r\n                                    variant=\"contained\"\r\n                                    color=\"error\">{DELETE}</Button>}\r\n\r\n\r\n\r\n                        </AnimateButton>\r\n\r\n                    </Box>\r\n                </Grid>\r\n\r\n                <Grid xs={6}>\r\n\r\n                    <Box\r\n                        sx={{\r\n                            mt: 2,\r\n                            marginLeft:1\r\n                        }}\r\n                    >\r\n                        <AnimateButton>\r\n\r\n                            <Button disableElevation size=\"large\" disabled={isloading}  onClick={handleCloseModal} fullWidth variant=\"contained\" color=\"secondary\">{Cancel}</Button>\r\n                        </AnimateButton>\r\n\r\n                    </Box>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n\r\n\r\n\r\n\r\n</Fragment>\r\n    );\r\n};\r\n\r\nexport default DeleteModalCore;\r\n","import { filter } from 'lodash';\r\nimport React, {Fragment, useEffect, useState} from 'react';\r\n// material\r\nimport Fade from '@mui/material/Fade';\r\n\r\nimport {\r\n\r\n    Box, ClickAwayListener,\r\n\r\n    Modal,\r\n\r\n} from '@mui/material';\r\n// components\r\nimport ThemeConfig from \"../../../themes/theme2\"\r\n\r\n\r\n\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {CLOSE_DELETE_MODAL, CLOSE_MODAL,} from \"../../../store/actions\";\r\n\r\n\r\n\r\nimport {\r\n\r\n    Grid,\r\n     useMediaQuery,\r\n} from \"@material-ui/core\";\r\n\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport Modal_Delete from \"../Modal_delete\";\r\nimport DeleteModalCore from \"./DeleteModal\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst OVERLAY_Styles ={\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right:0,\r\n    bottom:0,\r\n    zIndex:100\r\n\r\n}\r\nconst style = {\r\n\r\n    padding:'50px',\r\n    zIndex:100,\r\n      maxWidth:'95%',\r\n    borderRadius: 3,\r\n\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    radius:3,\r\n    transform: 'translate(-50%, -50%)',\r\n\r\n    bgcolor: 'background.paper',\r\n    border: '0px solid #000',\r\n\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\nconst User=  (props) => {\r\n\r\n\r\n\r\n\r\n\r\n    const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const dispatcher = useDispatch();\r\n\r\n    let account = useSelector((state) => state.account);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatcher({\r\n                type:CLOSE_MODAL,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    let open1 = useSelector((state) => state.modal);\r\n\r\n    const handleCloseModal = ()=> {\r\n        dispatcher({\r\n            type:CLOSE_DELETE_MODAL,\r\n\r\n        });\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n\r\n                open={open1.ModalDeleteState}\r\n                onClose={handleCloseModal}\r\n\r\n                closeAfterTransition\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n\r\n            >\r\n                <div style={OVERLAY_Styles}>\r\n                    <ClickAwayListener onClickAway={handleCloseModal}>\r\n\r\n                    <Fade in={open1.ModalDeleteState}>\r\n\r\n                        <Box sx={matchDownSM? {width:300,...style}:{width:450,...style} } >\r\n                        <ThemeConfig>\r\n\r\n                                <Modal_Delete  obj={open1.objet} type={props.type} />\r\n                                <Grid container alignItems={\"center\"}>\r\n\r\n\r\n                                    <DeleteModalCore obj={open1.objet} type={props.type}  />\r\n                                </Grid>\r\n                        </ThemeConfig>\r\n\r\n\r\n                        </Box>\r\n                    </Fade>\r\n                        </ClickAwayListener >\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n        </Fragment>\r\n    )\r\n        ;\r\n}\r\nexport default User;\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserListHead.propTypes = {\r\n    order: PropTypes.oneOf(['asc', 'desc']),\r\n    orderBy: PropTypes.string,\r\n    rowCount: PropTypes.number,\r\n    headLabel: PropTypes.array,\r\n    numSelected: PropTypes.number,\r\n    onRequestSort: PropTypes.func,\r\n    onSelectAllClick: PropTypes.func\r\n};\r\n\r\nexport default function UserListHead({\r\n                                         order,\r\n                                         orderBy,\r\n                                         rowCount,\r\n                                         headLabel,\r\n                                         numSelected,\r\n                                         onRequestSort,\r\n                                         onSelectAllClick\r\n                                     }) {\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead  >\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n\r\n                </TableCell>\r\n\r\n                {headLabel.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n\r\n\r\n                  align={headCell.alignRight}\r\n                  sortDirection={orderBy === headCell.id ? order : false}\r\n              >\r\n\r\n\r\n                        <TableSortLabel\r\n                            hideSortIcon\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <Box sx={{ ...visuallyHidden }}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </Box>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}","import PropTypes from 'prop-types';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n  Toolbar,\r\n  Tooltip,\r\n  IconButton,\r\n  Typography,\r\n  OutlinedInput,\r\n  InputAdornment, Button, Grid\r\n} from '@mui/material';\r\n// component\r\nimport Iconify from '../../Iconify';\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\nimport React, {Fragment} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {OPEN_MODAL} from \"../../../../../../store/actions\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\r\n  height: 96,\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  padding: theme.spacing(0, 1, 0, 3)\r\n}));\r\n\r\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\r\n  width: 240,\r\n  transition: theme.transitions.create(['box-shadow', 'width'], {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter\r\n  }),\r\n  '&.Mui-focused': { width: 320 },\r\n  '& fieldset': {\r\n    borderWidth: `1px !important`,\r\n    borderColor: `${theme.palette.grey[500_32]} !important`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserListToolbar.propTypes = {\r\n  numSelected: PropTypes.number,\r\n  filterName: PropTypes.string,\r\n  onFilterName: PropTypes.func\r\n};\r\n\r\n\r\nexport default function UserListToolbar({ numSelected, filterName, onFilterName }) {\r\n\r\n  const dispatcher = useDispatch();\r\n  const HandleClick=()=>{\r\n    dispatcher({\r\n      type:OPEN_MODAL,\r\n\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n      <Fragment>\r\n        <RootStyle\r\n            sx={{\r\n              ...(numSelected > 0 && {\r\n                color: 'primary.main',\r\n                bgcolor: 'primary.lighter'\r\n              })\r\n            }}\r\n        >\r\n          {numSelected > 0 ? (\r\n              <Typography component=\"div\" variant=\"subtitle1\">\r\n                {numSelected} selected\r\n              </Typography>\r\n          ) : (\r\n              <SearchStyle sx={{mr:2 ,ml:0}}\r\n                           value={filterName}\r\n                           onChange={onFilterName}\r\n                           placeholder=\"Search user...\"\r\n                           startAdornment={\r\n                             <InputAdornment position=\"start\">\r\n                               <Iconify icon=\"eva:search-fill\" sx={{ color: 'text.disabled' }} />\r\n                             </InputAdornment>\r\n                           }\r\n              />\r\n          )}\r\n\r\n          {numSelected > 0 ? (\r\n              <Tooltip title=\"Delete\">\r\n                <IconButton>\r\n                  <Iconify icon=\"eva:trash-2-fill\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n          ) : (\r\n              <Grid >\r\n                <Button sx={{width:125,mr:0,mb:2,mt:3}}\r\n                        variant=\"contained\"\r\n                        onClick={HandleClick}\r\n\r\n                        startIcon={<Iconify icon=\"eva:plus-fill\" />}\r\n                >\r\n                  New User\r\n                </Button>\r\n              </Grid>\r\n          )}\r\n        </RootStyle>\r\n      </Fragment>\r\n  );\r\n}","import React, {Fragment, useEffect, useState} from 'react';\r\n// material\r\nimport Fade from '@mui/material/Fade';\r\n\r\nimport {\r\n    Stack,\r\n    Typography,\r\n    Box,\r\n\r\n    Avatar,\r\n    Button,\r\n    Modal,\r\n    TextField, ClickAwayListener,\r\n} from '@mui/material';\r\n// components\r\nimport ThemeConfig from \"../../../themes/theme2\"\r\n\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nimport axios from \"axios\";\r\nimport configData from \"../../../config\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ADD_USER, CLICK, CLOSE_MODAL, CLOSE_MODAL_INFORMATION, LOGOUT} from \"../../../store/actions\";\r\n\r\n\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton, useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport {gridSpacing} from \"../../../store/constant\";\r\n\r\nimport {Alert, LoadingButton} from \"@material-ui/lab\";\r\nimport AnimateButton from \"../../../animation/AnimateButton\";\r\nimport useScriptRef from \"../../../hooks/useScriptRef\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport {Add, Adding, Cancel, CLOSE} from \"../../Button/actionButton\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst OVERLAY_Styles ={\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right:0,\r\n    bottom:0,\r\n    backgroundColor: 'rgba(0,0,0, .2)',\r\n    zIndex:100\r\n\r\n}\r\nconst style = {\r\n\r\n    padding:'50px',\r\n    zIndex:100,\r\nminWidth:'320px',\r\n    maxWidth:\"80%\",\r\n    borderRadius: 5,\r\n\r\n\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    radius:3,\r\n    transform: 'translate(-50%, -50%)',\r\n\r\n    bgcolor: 'background.paper',\r\n    border: '0px solid #000',\r\n    boxShadow: 24,\r\n    pt: 2,\r\n    px: 4,\r\n    pb: 3,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n\r\n\r\n\r\n    redButton: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.grey[50],\r\n        border: '1px solid',\r\n        borderColor: theme.palette.grey[100],\r\n        color: theme.palette.grey[700],\r\n        textTransform: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.light\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '0.875rem'\r\n        }\r\n    },\r\n    signDivider: {\r\n        flexGrow: 1\r\n    },\r\n    signText: {\r\n        cursor: 'unset',\r\n        margin: theme.spacing(2),\r\n        padding: '5px 56px',\r\n        borderColor: theme.palette.grey[100] + ' !important',\r\n        color: theme.palette.grey[900] + '!important',\r\n        fontWeight: 500\r\n    },\r\n    loginIcon: {\r\n        marginRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '8px'\r\n        }\r\n    },\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    },\r\n\r\n    root: {\r\n        alignSelf: 'center',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n\r\n        '&:hover .AvatarBackdrop': {\r\n            opacity: 0.5,\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n\r\n\r\n    },\r\n    large: {\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n        '&:hover .imageBackdrop': {\r\n            opacity: 0.5,\r\n        },\r\n    },\r\n\r\n\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst User=  (props) => {\r\n    const [isloading, setIsloading] = useState(false);\r\n\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let history =useHistory()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const dispatcher = useDispatch();\r\n\r\n    let account = useSelector((state) => state.account);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatcher({\r\n                type:CLOSE_MODAL_INFORMATION,\r\n            });\r\n        }\r\n    }, [])\r\n    const handleClose=()=>{\r\n\r\n        dispatcher({\r\n            type:CLOSE_MODAL_INFORMATION,\r\n        });\r\n\r\n    }\r\n\r\n\r\n    let open1 = useSelector((state) => state.modal);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n\r\n                open={open1.ModalInformation}\r\n                onClose={handleClose}\r\n\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n\r\n            >\r\n                <div style={OVERLAY_Styles}>\r\n                    <ClickAwayListener onClickAway={handleClose}>\r\n\r\n                    <Fade in={open1.ModalInformation}>\r\n\r\n                    <Box sx={{ ...style,  }} >\r\n                        <IconButton sx={{float:'right'}}               label=\"close\">\r\n                            <CloseIcon onClick={handleClose}  color=\"disabled\"      />\r\n                        </IconButton>\r\n                        <ThemeConfig>\r\n\r\n\r\n\r\n\r\n\r\n                            <grid>\r\n\r\n                                <Typography sx={{mt:1}} id=\"child-modal-title\"\r\n                                            gutterBottom\r\n                                            variant={matchDownSM ? 'h4' : 'h4'}\r\n                                            align={\"center\"}  >\r\n                                    User Information               </Typography></grid>\r\n\r\n                                        <FormControl fullWidth sx={{mb:3}}  className={classes.root}>\r\n\r\n\r\n                                                    <Avatar src={`${configData.API_SERVER}${open1.user.photo}`} className={classes.large}  />\r\n\r\n\r\n                                        </FormControl>\r\n\r\n                                        <Grid\r\n                                            container\r\n                                            spacing={3}\r\n                                        >\r\n                                            <Grid\r\n                                                item\r\n                                                md={6}\r\n                                                xs={6}\r\n                                            >\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                                <Grid item xs={6} >\r\n                                                    <Typography  fullWidth\r\n                                                                 label=\"First name\"\r\n                                                                 name=\"firstName\"\r\n                                                                 id=\"username\"   fontSize=\"17px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                                                        Name :\r\n                                                    </Typography>\r\n\r\n                                                    <Typography  fullWidth\r\n                                                                 label=\"First name\"\r\n                                                                 name=\"firstName\"\r\n                                                                 id=\"username\" color=\"black\"  fontSize=\"18px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                                                        {open1.user.username}\r\n\r\n                                                    </Typography>\r\n                                                </Grid>\r\n\r\n\r\n\r\n                                            </Grid>\r\n\r\n                                            <Grid\r\n                                                item\r\n                                                md={6}\r\n                                                xs={6}\r\n                                            >\r\n                                                <Grid item md={6} >\r\n                                                    <Typography  fullWidth\r\n                                                                 label=\"First name\"\r\n                                                                 name=\"firstName\"\r\n                                                                 id=\"username\"   fontSize=\"17px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                                                        Phone :\r\n                                                    </Typography>\r\n\r\n                                                    <Typography  fullWidth\r\n                                                                 label=\"First name\"\r\n                                                                 name=\"firstName\"\r\n                                                                 id=\"username\" color=\"black\"  fontSize=\"18px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                                                        {open1.user.phone}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid\r\n                                                item\r\n                                                md={6}\r\n                                                xs={12}\r\n                                            >\r\n                                                <Grid item xs={12} >\r\n                                                    <Typography  fullWidth\r\n                                                                 label=\"First name\"\r\n                                                                 name=\"firstName\"\r\n                                                                 id=\"username\"   fontSize=\"17px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                                                        Email :\r\n                                                    </Typography>\r\n\r\n                                                    <Typography  fullWidth\r\n                                                                 label=\"First name\"\r\n                                                                 name=\"firstName\"\r\n                                                                 id=\"username\" color=\"black\"  fontSize=\"18px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                                                        {open1.user.email}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid\r\n                                                item\r\n                                                md={12}\r\n                                                xs={12}\r\n                                            >\r\n                                                <Grid item md={12} >\r\n                                                    <Typography  fullWidth\r\n                                                                 label=\"First name\"\r\n                                                                 name=\"firstName\"\r\n                                                                 id=\"username\"   fontSize=\"17px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                                                        Role :\r\n                                                    </Typography>\r\n                                                    <Typography  fullWidth\r\n                                                                 label=\"First name\"\r\n                                                                 name=\"firstName\"\r\n                                                                 id=\"username\" color=\"black\"   fontSize=\"18px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                                                        {open1.user.role}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                            <Grid md={12}  container spacing={2} alignItems=\"center\" justifyContent=\"center\" stroke-linecap=\"round\">\r\n                                                <Grid item xs={12} md={12} >\r\n\r\n                                                    <Grid\r\n                                                        container\r\n                                                        direction={'row'}\r\n                                                        alignItems=\"center\"\r\n                                                        justifyContent=\"center\"\r\n                                                    >\r\n                                                        <Grid item mb={2}>\r\n                                                            <Stack alignItems=\"center\" justifyContent=\"center\">\r\n\r\n                                                                <Grid container   sx={{mt:3.75 }} alignItems=\"center\" >\r\n\r\n\r\n                                                                    <Grid md={12} container alignItems=\"center\" >\r\n                                                    <AnimateButton>\r\n                                                            <Button\r\n                                                                onClick={handleClose}\r\n                                                                disableElevation\r\n                                                                fullWidth\r\n                                                                type=\"submit\" size=\"large\"\r\n                                                                variant=\"contained\"\r\n                                                                color=\"secondary\">{CLOSE}</Button>\r\n\r\n\r\n\r\n                                                    </AnimateButton>\r\n                                                                    </Grid>\r\n                                                                </Grid>\r\n                                                            </Stack>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n</Grid>\r\n\r\n\r\n\r\n\r\n\r\n                        </ThemeConfig>\r\n                    </Box>\r\n                    </Fade>\r\n                        </ClickAwayListener >\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n        </Fragment>\r\n    )\r\n        ;\r\n}\r\nexport default User;\r\n","import React, {Fragment, useEffect, useState} from 'react';\r\n// material\r\nimport Fade from '@mui/material/Fade';\r\n\r\nimport {\r\n    Stack,\r\n    Typography,\r\n    Box,\r\n\r\n    Avatar,\r\n    Button,\r\n    Modal,\r\n    TextField,\r\n} from '@mui/material';\r\n// components\r\nimport ThemeConfig from \"../../../themes/theme2\"\r\n\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nimport axios from \"axios\";\r\nimport configData from \"../../../config\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ADD_USER, CLICK, ClOSE_EDIT_MODAL, CLOSE_MODAL, LOGOUT, UPDATE, USER_UPDATE} from \"../../../store/actions\";\r\n\r\n\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton, useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport {gridSpacing} from \"../../../store/constant\";\r\n\r\nimport {Alert, LoadingButton} from \"@material-ui/lab\";\r\nimport AnimateButton from \"../../../animation/AnimateButton\";\r\nimport useScriptRef from \"../../../hooks/useScriptRef\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport {Add, Adding, Cancel, Change, Changing} from \"../../Button/actionButton\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst OVERLAY_Styles ={\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right:0,\r\n    bottom:0,\r\n    backgroundColor: 'rgba(0,0,0, .2)',\r\n    zIndex:100\r\n\r\n}\r\nconst style = {\r\n\r\n    padding:'50px',\r\n    zIndex:100,\r\n    borderRadius: 5,\r\n\r\n\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    radius:3,\r\n    transform: 'translate(-50%, -50%)',\r\n\r\n    bgcolor: 'background.paper',\r\n    border: '0px solid #000',\r\n    boxShadow: 24,\r\n    pt: 2,\r\n    px: 4,\r\n    pb: 3,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n\r\n\r\n\r\n    redButton: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.grey[50],\r\n        border: '1px solid',\r\n        borderColor: theme.palette.grey[100],\r\n        color: theme.palette.grey[700],\r\n        textTransform: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.light\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '0.875rem'\r\n        }\r\n    },\r\n    signDivider: {\r\n        flexGrow: 1\r\n    },\r\n    signText: {\r\n        cursor: 'unset',\r\n        margin: theme.spacing(2),\r\n        padding: '5px 56px',\r\n        borderColor: theme.palette.grey[100] + ' !important',\r\n        color: theme.palette.grey[900] + '!important',\r\n        fontWeight: 500\r\n    },\r\n    loginIcon: {\r\n        marginRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '8px'\r\n        }\r\n    },\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    },\r\n\r\n    root: {\r\n        alignSelf: 'center',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n\r\n        '&:hover .AvatarBackdrop': {\r\n            opacity: 0.5,\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n\r\n\r\n    },\r\n    large: {\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n        '&:hover .imageBackdrop': {\r\n            opacity: 0.5,\r\n        },\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst EditModalCore=  ({objet}) => {\r\n    let location\r\n    if(window.location.pathname.includes('html'))\r\n        location=window.location.hash\r\n    else\r\n        location=window.location.pathname\r\n    const [isloading, setIsloading] = useState(false);\r\n\r\n    const states = [\r\n        {\r\n            value: 'administrateur',\r\n            label: 'administrateur'\r\n        },\r\n        {\r\n            value: 'simple employer',\r\n            label: 'simple employer'\r\n        },\r\n\r\n    ];\r\n\r\n\r\n    const classes = useStyles();\r\n    const scriptedRef = useScriptRef();\r\n    const dispatcher = useDispatch();\r\n\r\n    let account = useSelector((state) => state.account);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatcher({\r\n                type:ClOSE_EDIT_MODAL,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    let open1 = useSelector((state) => state.modal);\r\n\r\n    const handleClose=()=>{\r\n\r\n\r\n\r\n        dispatcher({\r\n            type:ClOSE_EDIT_MODAL,\r\n        });\r\n    }\r\n\r\n\r\n    let history =useHistory()\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n\r\n                                <Formik\r\n                                    initialValues={{\r\n                                        role: objet.role,\r\n                                    }}\r\n                                    validationSchema={Yup.object().shape({\r\n                                        role: Yup.string().required('role is required')\r\n                                    })}\r\n                                    onSubmit={(values, { setErrors, setStatus, setSubmitting }) => {\r\n\r\n\r\n                                        setIsloading(true)\r\n                                        if(objet.role==values.role){\r\n                                            setStatus({ success: false });\r\n                                            setErrors({ submit: \"you didn't change any thing\" });\r\n                                            setSubmitting(false)\r\n                                            setIsloading(false)\r\n                                        }\r\n                                        else{\r\n//la liaison entre la partie front et la partie back se fait à travers ce bout de code durant lequel il y'aura l'envoie des données a utilisé et le type du méthode du contoller souhaité\r\n\r\n                                        try {\r\n\r\n\r\n\r\n                                            axios.post( configData.API_SERVER + 'api/User/editUser', {\r\n                                              token:account.token,\r\n\r\n                                                role:values.role,\r\n                                                userID:objet._id,\r\n                                                user_id:account.user._id\r\n                                            })\r\n                                                .then(function (response) {\r\n                                                    if(response.data.notConnected){\r\n                                                        dispatcher({ type: LOGOUT });\r\n                                                        history.push(\"/login\");\r\n                                                        dispatcher({\r\n                                                            type:CLICK,\r\n                                                            payload: {text:\"You are no longer connected\",severity:\"error\"}\r\n                                                        })\r\n                                                    }\r\n                                                    else\r\n\r\n\r\n                                                    {\r\n\r\n                                                    if (response.data.success) {\r\n                                                        dispatcher({\r\n                                                            type:USER_UPDATE,\r\n                                                            payload: {user:response.data.user}\r\n                                                        });\r\n\r\n                                                        dispatcher({\r\n                                                            type:ClOSE_EDIT_MODAL,\r\n                                                        });\r\n                                                        dispatcher({\r\n                                                            type:CLICK,\r\n                                                            payload: {text:'user modified with success',severity:\"success\"}\r\n                                                        });\r\n                                                    } else {\r\n\r\n                                                        if(response.data.administratorProblem)\r\n                                                        {\r\n\r\n                                                            setStatus({ success: false });\r\n                                                            setSubmitting(false);\r\n                                                            setIsloading(false)\r\n                                                            dispatcher({\r\n                                                                type:ClOSE_EDIT_MODAL,\r\n                                                            });\r\n                                                            dispatcher({\r\n                                                                type:UPDATE,\r\n                                                                payload: {user:response.data.user}\r\n                                                            });\r\n                                                            history.push(configData.defaultPath)\r\n\r\n                                                            dispatcher({\r\n                                                                type:CLICK,\r\n                                                                payload: {text:'you are no longer an administrateur',severity:\"error\"}\r\n                                                            });\r\n\r\n                                                        }\r\n                                                    }\r\n                                                }})\r\n                                                .catch(function (error) {\r\n                                                    setIsloading(false)\r\n                                                    dispatcher({\r\n                                                        type:ClOSE_EDIT_MODAL,\r\n                                                    });\r\n                                                    history.push(configData.defaultPath)\r\n\r\n                                                    dispatcher({\r\n                                                        type:CLICK,\r\n                                                        payload: {text:'externel error please try later',severity:\"error\"}\r\n                                                    });\r\n                                                });\r\n                                        } catch (err) {\r\n\r\n                                                setStatus({ success: false });\r\n                                                setSubmitting(false);\r\n                                                setIsloading(false)\r\n                                                dispatcher({\r\n                                                    type:ClOSE_EDIT_MODAL,\r\n                                                });\r\n                                                history.push(configData.defaultPath)\r\n\r\n                                                dispatcher({\r\n                                                    type:CLICK,\r\n                                                    payload: {text:'externel error please try later',severity:\"error\"}\r\n                                                });\r\n\r\n                                        }\r\n                                    }}}\r\n                                >\r\n                                    {({ errors,setFieldValue, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                                        <form  noValidate onSubmit={handleSubmit} >\r\n                                                      <Grid item lg={12} md={12} mt={3} sm={12} xs={12}>\r\n\r\n                                                                    <FormControl fullWidth   error={Boolean(touched.role&& errors.role)} >\r\n\r\n                                                                        <TextField\r\n                                                                            fullWidth\r\n                                                                            onChange={handleChange}\r\n                                                                            required\r\n                                                                            select\r\n                                                                            SelectProps={{ native: true }}\r\n                                                                            variant=\"outlined\"\r\n                                                                            id=\"role\"\r\n                                                                            name=\"role\"\r\n\r\n                                                                            value={values.role}\r\n                                                                            label=\"Role\"\r\n                                                                            onBlur={handleBlur}\r\n                                                                            error={touched.role && Boolean(errors.role)}\r\n\r\n                                                                            onChange={handleChange}\r\n\r\n\r\n                                                                        >\r\n                                                                            {states.map((option) => (\r\n                                                                                <option\r\n                                                                                    key={option.value}\r\n                                                                                    value={option.value}\r\n                                                                                >\r\n                                                                                    {option.label}\r\n                                                                                </option>\r\n                                                                            ))}\r\n                                                                        </TextField>\r\n\r\n                                                                    </FormControl>\r\n                                                                </Grid>\r\n                                            <Box\r\n                                                sx={{\r\n                                                    mt: 2\r\n                                                }}\r\n                                            >\r\n                                                {errors.submit && (\r\n                                                    <Box\r\n                                                        sx={{\r\n                                                            mt:1\r\n                                                        }}\r\n                                                    >\r\n                                                        <Alert severity=\"error\">{errors.submit}</Alert>\r\n\r\n                                                    </Box>\r\n                                                )}\r\n\r\n\r\n                                                <Grid container alignItems={\"center\"}>\r\n                                                    <Grid xs={6}>\r\n                                                        <Box\r\n                                                            sx={{\r\n                                                                mr:1,\r\n                                                                mt: 2,\r\n\r\n                                                            }}\r\n                                                        >\r\n                                                            <AnimateButton>\r\n                                                                {isloading?(<LoadingButton variant=\"contained\"   fullWidth size=\"large\" loading loadingPosition=\"start\" startIcon={<SaveIcon />} variant=\"outlined\">{Changing}</LoadingButton>):\r\n                                                                    <Button\r\n                                                                        disabled={isSubmitting}\r\n                                                                        disableElevation\r\n                                                                        fullWidth\r\n                                                                        type=\"submit\" size=\"large\"\r\n                                                                        variant=\"contained\"\r\n                                                                        color=\"secondary\">{Change}</Button>}\r\n\r\n\r\n\r\n                                                            </AnimateButton>\r\n\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                    <Grid xs={6}>\r\n\r\n                                                        <Box\r\n                                                            sx={{\r\n                                                                mt: 2,\r\n                                                                marginLeft:1\r\n                                                            }}\r\n                                                        >\r\n                                                            <AnimateButton>\r\n\r\n                                                                <Button disableElevation  disabled={isSubmitting} size=\"large\"  onClick={handleClose} fullWidth variant=\"contained\" color=\"error\">{Cancel}</Button>\r\n                                                            </AnimateButton>\r\n\r\n                                                        </Box>\r\n                                                    </Grid>\r\n\r\n                                                </Grid>\r\n\r\n                                            </Box>\r\n\r\n                                        </form>\r\n                                    )}\r\n                                </Formik>\r\n\r\n\r\n\r\n        </Fragment>\r\n    )\r\n        ;\r\n}\r\nexport default EditModalCore;\r\n\r\n","import { filter } from 'lodash';\r\nimport React, {Fragment, useEffect, useState} from 'react';\r\n// material\r\nimport Fade from '@mui/material/Fade';\r\n\r\nimport {\r\n\r\n    Box, ClickAwayListener,\r\n\r\n    Modal,\r\n\r\n} from '@mui/material';\r\n// components\r\nimport ThemeConfig from \"../../../themes/theme2\"\r\n\r\n\r\n\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ClOSE_EDIT_MODAL, CLOSE_MODAL,} from \"../../../store/actions\";\r\n\r\n\r\n\r\nimport {\r\n\r\n    Grid,\r\n     useMediaQuery,\r\n} from \"@material-ui/core\";\r\n\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport EditModalCore from \"./EditModalCore\";\r\nimport EditModal from \"../EditModalHeder/EditModal\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst OVERLAY_Styles ={\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right:0,\r\n    bottom:0,\r\n    zIndex:100\r\n\r\n}\r\nconst style = {\r\n\r\n    padding:'50px',\r\n    zIndex:100,\r\n    maxWidth:\"90%\",\r\n\r\n    borderRadius: 3,\r\n\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    radius:3,\r\n    transform: 'translate(-50%, -50%)',\r\n\r\n    bgcolor: 'background.paper',\r\n    border: '0px solid #000',\r\n\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\nconst User=  (props) => {\r\n\r\n\r\n\r\n\r\n\r\n    const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n    const dispatcher = useDispatch();\r\n    let account = useSelector((state) => state.account);\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatcher({\r\n                type:CLOSE_MODAL,\r\n            });\r\n        }\r\n    }, [])\r\n    let open1 = useSelector((state) => state.modal);\r\n    const handleClose=()=>{\r\n\r\n\r\n\r\n        dispatcher({\r\n            type:ClOSE_EDIT_MODAL,\r\n        });\r\n    }\r\n    return (\r\n        <Fragment>\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n\r\n                open={open1.ModalEditState}\r\n                onClose={handleClose}\r\n\r\n                closeAfterTransition\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n\r\n            >\r\n                <div style={OVERLAY_Styles}>\r\n                    <ClickAwayListener onClickAway={handleClose}>\r\n\r\n                    <Fade in={open1.ModalEditState}>\r\n\r\n                        <Box sx={matchDownSM? {width:300,...style}:{width:450,...style} } >\r\n                        <ThemeConfig>\r\n\r\n                                <EditModal type={props.type} name={open1.objet.username} />\r\n\r\n\r\n                                    <EditModalCore objet={open1.objet} type={props.type}  />\r\n                        </ThemeConfig>\r\n\r\n\r\n                        </Box>\r\n                    </Fade>\r\n                        </ClickAwayListener >\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n        </Fragment>\r\n    )\r\n        ;\r\n}\r\nexport default User;\r\n","import { useHistory} from \"react-router-dom\";\r\n\r\nimport { filter } from 'lodash';\r\nimport React, {Fragment,  useState} from 'react';\r\n// material\r\nimport {\r\n    Stack,\r\n\r\n    Typography,\r\n    Box, TableCell,  Avatar, Button,\r\n} from '@mui/material';\r\n\r\nimport configData from \"../../config\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    CLOSE_DELETE_MODAL,\r\n    DELETE,\r\n    OPEN_DELETE_MODAL,\r\n    OPEN_EDIT_MODAL,\r\n    OPEN_MODAL_INFORMATION\r\n} from \"../../store/actions\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport {useMediaQuery, useTheme} from \"@material-ui/core\";\r\n// ----------------------------------------------------------------------\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Cells=  ({userPar}) => {\r\n\r\n\r\n\r\n    const dispatcher = useDispatch();\r\n\r\n\r\n    let history = useHistory();\r\n\r\n\r\n\r\n    const handleViewModal = () => {\r\n        dispatcher({\r\n            type:OPEN_MODAL_INFORMATION,\r\n            payload: {user:userPar}\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const handleClickEditModal = () => {\r\n\r\n        dispatcher({\r\n            type:OPEN_EDIT_MODAL,\r\n            payload: {objet:userPar}\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    const handleClickModal = () => {\r\n\r\n        dispatcher({\r\n            type:OPEN_DELETE_MODAL,\r\n            payload: {objet:userPar}\r\n        })}\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const matchDownLG = useMediaQuery(theme.breakpoints.down('lg'));\r\n    const matchDownMD= useMediaQuery(theme.breakpoints.down('md'));\r\n    const matchDownXL = useMediaQuery(theme.breakpoints.down('xl'));\r\n\r\n\r\n\r\n\r\n\r\n    return ( <Fragment>\r\n\r\n            <TableCell sx={{minWidth:\"100%\"}} component=\"th\" scope=\"row\" padding=\"none\">\r\n                <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                    <Avatar alt={userPar.username}  src={`${configData.API_SERVER}${userPar.photo}`}/>\r\n                    <Typography variant=\"subtitle2\" noWrap>\r\n                        {userPar.username}\r\n                    </Typography>\r\n                </Stack>\r\n            </TableCell>\r\n\r\n\r\n\r\n\r\n\r\n            <TableCell align=\"left\" sx={{minWidth:\"100%\"}}>\r\n                <Stack sx={{mr:2}} direction=\"column\"  justifyContent=\"space-between\" >\r\n\r\n\r\n                    <Button sx={{mb:1}}  onClick={handleClickEditModal}  variant=\"outlined\"  color=\"info\" >\r\n                        <EditIcon />\r\n                    </Button>\r\n                    <Button  sx={{mb:1}} onClick={handleClickModal} variant=\"outlined\" color=\"error\"  >\r\n                        <DeleteIcon />\r\n\r\n                    </Button>\r\n                    <Button   variant=\"outlined\"  sx={{mb:1}} onClick={handleViewModal} color=\"info\"  >\r\n                        <VisibilityIcon />\r\n\r\n                    </Button>\r\n\r\n                </Stack>\r\n\r\n\r\n            </TableCell>\r\n        </Fragment>\r\n\r\n    )\r\n        ;\r\n}\r\nexport default Cells;","import React, {Fragment, useEffect, useState} from 'react';\r\n// material\r\nimport Fade from '@mui/material/Fade';\r\n\r\nimport {\r\n    Stack,\r\n    Typography,\r\n    Box,\r\n\r\n    Avatar,\r\n    Button,\r\n    Modal,\r\n    TextField, ClickAwayListener,\r\n} from '@mui/material';\r\n// components\r\nimport ThemeConfig from \"../../../themes/theme2\"\r\n\r\n\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nimport axios from \"axios\";\r\nimport configData from \"../../../config\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ADD_USER, CLICK, CLOSE_MODAL, LOGOUT} from \"../../../store/actions\";\r\n\r\n\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton, useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport {gridSpacing} from \"../../../store/constant\";\r\n\r\nimport {Alert, LoadingButton} from \"@material-ui/lab\";\r\nimport AnimateButton from \"../../../animation/AnimateButton\";\r\nimport useScriptRef from \"../../../hooks/useScriptRef\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport {Add, Adding, Cancel} from \"../../Button/actionButton\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useTheme} from \"@mui/material/styles\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst OVERLAY_Styles ={\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right:0,\r\n    bottom:0,\r\n    backgroundColor: 'rgba(0,0,0, .2)',\r\n    zIndex:100\r\n\r\n}\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    largeImage: {\r\n\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        right: \"50%\",\r\n        bottom: \"50%\",\r\n        transform: 'translate(-2%,2%)',\r\n        borderRadius : \"50%\",\r\n        overflow: \"hidden\",\r\n        border: \"1px solid grey\",\r\n    },\r\n\r\n    uploadBtn:{\r\n        height: '0%',\r\n        width: '100%',\r\n        position: 'absolute',\r\n        bottom: '0',\r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        textAlign: 'center',\r\n        color: 'wheat',\r\n        lineHeight : '160px',\r\n        fontFamily: 'sans-serif',\r\n        fontSize: '16px',\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#000000\",\r\n        opacity: '0.8',\r\n\r\n    },\r\n\r\n\r\n\r\n\r\n    redButton: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.grey[50],\r\n        border: '1px solid',\r\n        borderColor: theme.palette.grey[100],\r\n        color: theme.palette.grey[700],\r\n        textTransform: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.light\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '0.875rem'\r\n        }\r\n    },\r\n    signDivider: {\r\n        flexGrow: 1\r\n    },\r\n    signText: {\r\n        cursor: 'unset',\r\n        margin: theme.spacing(2),\r\n        padding: '5px 56px',\r\n        borderColor: theme.palette.grey[100] + ' !important',\r\n        color: theme.palette.grey[900] + '!important',\r\n        fontWeight: 500\r\n    },\r\n    loginIcon: {\r\n        marginRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '8px'\r\n        }\r\n    },\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    },\r\n\r\n    root: {\r\n        alignSelf: 'center',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n\r\n        '&:hover .AvatarBackdrop': {\r\n            opacity: 0.5,\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n\r\n\r\n    },\r\n    large: {\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n        '&:hover .imageBackdrop': {\r\n            opacity: 0.5,\r\n        },\r\n    },\r\n\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst User=  (props) => {\r\n    const theme = useTheme();\r\n\r\n    const  minWidth='330px'\r\n\r\n    const style = {\r\n\r\n        padding:'50px',\r\n        zIndex:100,\r\nminWidth,\r\n        borderRadius: 5,\r\n\r\n\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        radius:3,\r\n        transform: 'translate(-50%, -50%)',\r\n\r\n        bgcolor: 'background.paper',\r\n        border: '0px solid #000',\r\n        boxShadow: 24,\r\n        pt: 2,\r\n        px: 4,\r\n        pb: 3,\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//our selectors\r\n\r\n    let account = useSelector((state) => state.account);\r\n    const [isloading, setIsloading] = useState(false);\r\n\r\n    const states = [\r\n        {\r\n            value: 'administrateur',\r\n            label: 'administrateur'\r\n        },\r\n        {\r\n            value: 'simple employer',\r\n            label: 'simple employer'\r\n        },\r\n\r\n    ];\r\n    let [source, setSource] = React.useState(\"/static/images/avatar_1.png\");\r\n\r\n    const handleCapture = ({target}) => {\r\n        const fileReader = new FileReader();\r\n        // const name = target.accept.includes('image') ? 'images' : 'videos';\r\n\r\n        fileReader.readAsDataURL(target.files[0]);\r\n        fileReader.onload = (e) => {\r\n            setSource(e.target.result);\r\n        };\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let history =useHistory()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const dispatcher = useDispatch();\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatcher({\r\n                type:CLOSE_MODAL,\r\n            });\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    let open1 = useSelector((state) => state.modal);\r\n\r\n    const handleClose=()=>{\r\n\r\n\r\n\r\n        setSource(\"/static/images/avatar_1.png\")\r\n        dispatcher({\r\n            type:CLOSE_MODAL,\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n\r\n                open={open1.ModalState}\r\n                onClose={handleClose}\r\n\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n\r\n            >\r\n                <div style={OVERLAY_Styles}>\r\n                    <ClickAwayListener onClickAway={handleClose}>\r\n\r\n                    <Fade in={open1.ModalState}>\r\n\r\n                    <Box sx={{ ...style,  }}>\r\n                        <ThemeConfig>\r\n\r\n                            <Formik\r\n                                initialValues={{\r\n                                    username: '',\r\n                                    email: '',\r\n                                    role: 'administrateur',\r\n                                    phone: '',\r\n\r\n                                    submit: null\r\n                                }}\r\n                                validationSchema={Yup.object().shape({\r\n                                    email: Yup.string().email('Must be a valid email').max(100,\"must contain only 100 digits\").required('Email is required'),\r\n                                    username: Yup.string().required('Username is required'),\r\n                                   phone:Yup.string().required().matches(/^[0-9]+$/, \"Must be only digits\").min(8, 'Must be exactly 8 digits').max(8, 'Must be exactly 8 digits'),\r\n                                    role: Yup.string().required('role is required')\r\n\r\n                                })}\r\n                                onSubmit={(values, { setErrors, setStatus, setSubmitting }) => {\r\nsetIsloading(true)\r\n                                    try {\r\n\r\n\r\n\r\n                                        let fd = new FormData();\r\n\r\n                                        fd.append('username',values.username)\r\n                                        fd.append('email',values.email)\r\n                                        fd.append('phone',parseInt(values.phone))\r\n                                        fd.append('file',values.file)\r\n                                        fd.append('role',values.role)\r\n                                        fd.append('token',account.token)\r\n                                        fd.append('sendtphoto',values.sendtphoto)\r\n\r\n//la liaison entre la partie front et la partie back se fait à travers ce bout de code durant lequel il y'aura l'envoie des données a utilisé et le type du méthode du contoller souhaité\r\n\r\n                                        axios.post( configData.API_SERVER + 'api/User/register', fd,{ headers: {\r\n                                                \"Content-Type\": \"multipart/form-data\"\r\n                                            }})\r\n                                            .then(function (response) {\r\n                                                if(response.data.notConnected){\r\n                                                    dispatcher({ type: LOGOUT });\r\n                                                    history.push(\"/login\");\r\n                                                    dispatcher({\r\n                                                        type:CLICK,\r\n                                                        payload: {text:\"You are no longer connected\",severity:\"error\"}\r\n                                                    })\r\n                                                }\r\n                                                else\r\n                                                {\r\n                                                if (response.data.success) {\r\n\r\n                                                    dispatcher({\r\n                                                        type:ADD_USER,\r\n                                                        payload: {user:response.data.user}\r\n                                                    });\r\n                                                    setIsloading(false)\r\n                                                    dispatcher({\r\n                                                        type:CLOSE_MODAL,\r\n                                                    });\r\n                                                    setSource(\"/static/images/avatar_1.png\")\r\n\r\n                                                    dispatcher({\r\n                                                        type:CLICK,\r\n                                                        payload: {text:\"User added successfully\",severity:\"success\"}\r\n                                                    });\r\n\r\n                                                } else {\r\n                                                    setStatus({ success: false });\r\n                                                    setErrors({ submit: response.data.msg });\r\n                                                    setSubmitting(false);\r\n                                                    setIsloading(false)\r\n\r\n                                                }\r\n                                            }})\r\n                                            .catch(function (error) {\r\n                                                setStatus({ success: false });\r\n                                                setErrors({ submit: error.response.data.msg });\r\n                                                setSubmitting(false);\r\n                                                setIsloading(false)\r\n\r\n                                            });\r\n                                    } catch (err) {\r\n                                        if (scriptedRef.current) {\r\n                                            setStatus({ success: false });\r\n                                            setErrors({ submit: err.message });\r\n                                            setSubmitting(false);\r\n                                            setIsloading(false)\r\n\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            >\r\n                                {({ errors,setFieldValue,setStatus,setSubmitting,setErrors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                                    <form  noValidate onSubmit={handleSubmit} >\r\n\r\n\r\n\r\n    <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n        <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n    <Typography\r\n        color={theme.palette.secondary.main}\r\n        gutterBottom\r\n        variant={matchDownSM ? 'h3' : 'h3'}\r\n    >\r\n        Add User\r\n    </Typography>\r\n\r\n\r\n</Stack>\r\n    </Stack>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                        <Grid marginBottom={1} >\r\n\r\n                                        <FormControl fullWidth  className={classes.root}>\r\n\r\n                                            <div className={classes.largeImage} id=\"divStyle\">\r\n                                                <img src={source} id=\"photo\" />\r\n                                                <input type=\"file\" id=\"file\"  accept=\"image/*\"\r\n                                                       onChange={(event)=>{\r\n                                                           if((((event.target.files[0].name).toLowerCase()).endsWith(\".png\"))||(((event.target.files[0].name).toLowerCase()).endsWith(\".jpg\"))||(((event.target.files[0].name).toLowerCase()).endsWith(\".jpeg\"))) {\r\n\r\n                                                               handleCapture(event);\r\n                                                               handleChange(event)\r\n\r\n                                                               setFieldValue(\"file\", event.target.files[0])\r\n                                                               setFieldValue(\"sendtphoto\", true)\r\n                                                           }\r\n                                                       else{\r\n                                                               setStatus({ success: false });\r\n                                                               setErrors({ submit: \"You should enter PNG or JPG photo \" });\r\n                                                               setSubmitting(false);\r\n                                                               setIsloading(false)\r\n\r\n                                                           }\r\n                                                       }}\r\n\r\n                                                      id=\"file\" type=\"file\"/>\r\n                                                <label htmlFor=\"file\" className={classes.uploadBtn}  id=\"labelStyle\">Choose Photo</label>\r\n                                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                        </FormControl>\r\n                                        </Grid>\r\n\r\n\r\n                                        <Stack spacing={2} id=\"transition-modal-title\">\r\n                                            <Stack direction={{ xs: 'column', sm: 'row' }}  spacing={12}>\r\n\r\n                                                <Grid container spacing={2}>\r\n                                                    <Grid item  xs={12} >\r\n                                                        <Grid container spacing={gridSpacing} >\r\n                                                            <Grid item lg={6} md={6} sm={6} xs={12}>\r\n                                                                <FormControl  fullWidth error={Boolean(touched.username && errors.username)}>\r\n                                                                    <TextField label=\"username\" required variant=\"outlined\"\r\n                                                                               id=\"outlined-adornment-username-register\"\r\n                                                                               name=\"username\"\r\n                                                                               value={values.username}\r\n                                                                               onBlur={handleBlur}\r\n                                                                               onChange={handleChange}\r\n\r\n                                                                    />\r\n\r\n                                                                    {touched.username && errors.username && (\r\n                                                                        <FormHelperText error id=\"standard-weight-helper-text--username\">\r\n                                                                            {errors.username}\r\n                                                                        </FormHelperText>\r\n                                                                    )}\r\n\r\n\r\n\r\n                                                                </FormControl>\r\n                                                            </Grid>\r\n                                                            <Grid item lg={6} md={6} sm={6} xs={12}>\r\n\r\n                                                                <FormControl fullWidth error={Boolean(touched.email && errors.email)} >\r\n                                                                    <TextField label=\"Email\" required variant=\"outlined\"\r\n                                                                               id=\"outlined-adornment-email-register\"\r\n                                                                               type=\"email\"\r\n                                                                               value={values.email}\r\n                                                                               name=\"email\"\r\n                                                                               onBlur={handleBlur}\r\n                                                                               onChange={handleChange}\r\n\r\n                                                                    />\r\n                                                                    {touched.email && errors.email && (\r\n                                                                        <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n\r\n                                                                            {errors.email}\r\n                                                                        </FormHelperText>\r\n                                                                    )}\r\n                                                                </FormControl>\r\n                                                            </Grid>\r\n\r\n\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n\r\n                                                </Grid>\r\n\r\n\r\n\r\n\r\n                                            </Stack>\r\n\r\n                                            <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n\r\n\r\n                                                <Grid container spacing={3}>\r\n                                                    <Grid item  xs={12} >\r\n                                                        <Grid container spacing={gridSpacing} >\r\n                                                            <Grid item lg={6} md={6} sm={6} xs={12}>\r\n                                                                <FormControl fullWidth error={Boolean(touched.phone && errors.phone)}>\r\n                                                                    <TextField label=\"phone\" required variant=\"outlined\"\r\n                                                                               id=\"outlined-adornment-phone-register\"\r\n                                                                               type=\"phone\"\r\n                                                                               value={values.phone}\r\n                                                                               name=\"phone\"\r\n                                                                               onBlur={handleBlur}\r\n                                                                               onChange={handleChange}\r\n\r\n                                                                    />\r\n                                                                    {touched.phone && errors.phone && (\r\n                                                                        <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                                                            {' '}\r\n                                                                            {errors.phone}{' '}\r\n                                                                        </FormHelperText>\r\n                                                                    )}\r\n                                                                </FormControl>\r\n                                                            </Grid>\r\n                                                            <Grid item lg={6} md={6} sm={6} xs={12}>\r\n\r\n                                                                <FormControl fullWidth   error={Boolean(touched.role&& errors.role)} >\r\n\r\n                                                                    <TextField\r\n                                                                        fullWidth\r\n                                                                        onChange={handleChange}\r\n                                                                        required\r\n                                                                        select\r\n                                                                        SelectProps={{ native: true }}\r\n                                                                        variant=\"outlined\"\r\n                                                                        id=\"role\"\r\n                                                                        name=\"role\"\r\n\r\n                                                                        value={values.role}\r\n                                                                        label=\"Role\"\r\n                                                                        onBlur={handleBlur}\r\n                                                                        error={touched.role && Boolean(errors.role)}\r\n\r\n                                                                        onChange={handleChange}\r\n\r\n\r\n                                                                    >\r\n                                                                        {states.map((option) => (\r\n                                                                            <option\r\n                                                                                key={option.value}\r\n                                                                                value={option.value}\r\n                                                                            >\r\n                                                                                {option.label}\r\n                                                                            </option>\r\n                                                                        ))}\r\n                                                                    </TextField>\r\n\r\n                                                                </FormControl>\r\n                                                            </Grid>\r\n\r\n\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n\r\n                                                </Grid>\r\n\r\n                                            </Stack>\r\n\r\n\r\n                                        </Stack>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                        <Box\r\n                                            sx={{\r\n                                                mt: 2\r\n                                            }}\r\n                                        >\r\n                                            {errors.submit && (\r\n                                                <Box\r\n                                                    sx={{\r\n                                                        mt:1\r\n                                                    }}\r\n                                                >\r\n                                                    <Alert severity=\"error\">{errors.submit}</Alert>\r\n\r\n                                                </Box>\r\n                                            )}\r\n\r\n\r\n                                            <Grid container alignItems={\"center\"}>\r\n<Grid xs={6}>\r\n                                                <Box\r\n                                                    sx={{\r\n                                                        mr:1,\r\n                                                        mt: 2,\r\n\r\n                                                    }}\r\n                                                >\r\n                                                    <AnimateButton>\r\n                                                        {isloading?(<LoadingButton variant=\"contained\"   fullWidth size=\"large\" loading loadingPosition=\"start\" startIcon={<SaveIcon />} variant=\"outlined\">{Adding}</LoadingButton>):\r\n                                                            <Button\r\n                                                                disabled={isSubmitting}\r\n                                                                disableElevation\r\n                                                                fullWidth\r\n                                                                type=\"submit\" size=\"large\"\r\n                                                                variant=\"contained\"\r\n                                                                color=\"secondary\">{Add}</Button>}\r\n\r\n\r\n\r\n                                                    </AnimateButton>\r\n\r\n                                                </Box>\r\n</Grid>\r\n                                                <Grid xs={6}>\r\n\r\n                                                <Box\r\n                                                    sx={{\r\n                                                        mt: 2,\r\n                                                        marginLeft:1\r\n                                                    }}\r\n                                                >\r\n                                                    <AnimateButton>\r\n\r\n                                                        <Button disableElevation  disabled={isSubmitting} size=\"large\"  onClick={handleClose} fullWidth variant=\"contained\" color=\"error\">{Cancel}</Button>\r\n                                                    </AnimateButton>\r\n\r\n                                                </Box>\r\n                                                </Grid>\r\n\r\n                                            </Grid>\r\n\r\n                                        </Box>\r\n\r\n                                    </form>\r\n                                )}\r\n                            </Formik>\r\n                        </ThemeConfig>\r\n                    </Box>\r\n                    </Fade>\r\n                        </ClickAwayListener >\r\n\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n        </Fragment>\r\n    )\r\n        ;\r\n}\r\nexport default User;\r\n","import { faker } from '@faker-js/faker';\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst users = [...Array(6)].map((_, index) => ({\r\n    id: faker.datatype.uuid(),\r\n\r\n    name: faker.name.findName(),\r\n    emaill: faker.name.findName(),\r\n    role: faker.name.findName(),\r\n    phone: faker.name.findName(),\r\n\r\n\r\n}));\r\n\r\nexport default users;\r\n","import { filter } from 'lodash';\r\nimport React, {Fragment, useState} from 'react';\r\n// material\r\nimport {\r\n    Stack,\r\n\r\n    Box,\r\n    TableContainer,\r\n    Table,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n\r\n    TablePagination,\r\n   Skeleton,\r\n} from '@mui/material';\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {UserListHead} from \"../../../../views/ViewAll/import/customer/@dashboard/user\";\r\nimport UserListToolbarSkelton from \"./UserListToolbarSkelton\";\r\n\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\n\r\nimport USERLIST from '../Static_Data/Static';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst TABLE_HEAD = [\r\n    { id: 'username', label: 'User name', alignRight: 'left' },\r\n    { id: 'email', label: 'Email', alignRight: 'left' },\r\n    { id: 'phone', label: 'Phone', alignRight: 'left' },\r\n    { id: 'role', label: 'Role', alignRight: 'left' },\r\n\r\n    {  id: 'action', label: '           Activites', alignLeft: 'center' }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\n\r\nconst SkeltonTable=  (props) => {\r\n    const [page, setPage] = useState(0);\r\n    const [order, setOrder] = useState('asc');\r\n    const [selected, setSelected] = useState([]);\r\n    const [orderBy, setOrderBy] = useState('username');\r\n    const [filterName, setFilterName] = useState('');\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function descendingComparator(a, b, orderBy) {\r\n        if (b[orderBy] < a[orderBy]) {\r\n            return -1;\r\n        }\r\n        if (b[orderBy] > a[orderBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function getComparator(order, orderBy) {\r\n        return order === 'desc'\r\n            ? (a, b) => descendingComparator(a, b, orderBy)\r\n            : (a, b) => -descendingComparator(a, b, orderBy);\r\n    }\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n    function applySortFilter(array, comparator, query) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const order = comparator(a[0], b[0]);\r\n            if (order !== 0) return order;\r\n            return a[1] - b[1];\r\n        });\r\n        if (query) {\r\n            return filter(array, (_user) => _user.username.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n        }\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = USERLIST.map((n) => n.username);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - USERLIST.length) : 0;\r\n\r\n    const filteredUsers = applySortFilter(USERLIST, getComparator(order, orderBy), filterName);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n\r\n\r\n\r\n\r\n            <UserListToolbarSkelton\r\n                numSelected={selected.length}\r\n                filterName={filterName}\r\n            />\r\n                            <PerfectScrollbar>\r\n                                <TableContainer sx={{minWidth: 600}}>\r\n                                    <Table>\r\n                                        <UserListHead\r\n                                            order={order}\r\n                                            orderBy={orderBy}\r\n                                            headLabel={TABLE_HEAD}\r\n                                            rowCount={6}\r\n                                            numSelected={selected.length}\r\n                                            onRequestSort={handleRequestSort}\r\n                                            onSelectAllClick={handleSelectAllClick}\r\n                                        />\r\n                                        <TableBody>\r\n                                            {filteredUsers\r\n                                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                                .map((row) => {\r\n\r\n\r\n                                                    const {_id, username} = row;\r\n                                                    const isItemSelected = selected.indexOf(username) !== -1;\r\n\r\n                                                    return (\r\n                                                        <Fragment>\r\n                                                            <TableRow\r\n                                                                hover\r\n                                                                key={_id}\r\n                                                                tabIndex={-1}\r\n                                                                role=\"checkbox\"\r\n                                                                selected={isItemSelected}\r\n                                                                aria-checked={isItemSelected}\r\n                                                            >\r\n\r\n                                                                <TableCell padding=\"checkbox\">\r\n\r\n                                                                </TableCell>\r\n                                                                <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                                                                    <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                                                                        <Skeleton variant=\"circular\" width={40} height={40} />\r\n                                                                        <Skeleton width=\"40%\" />\r\n                                                                    </Stack>\r\n                                                                </TableCell>\r\n\r\n\r\n                                                                <TableCell align=\"left\">  <Skeleton width=\"60%\" /></TableCell>\r\n                                                                <TableCell align=\"left\">  <Skeleton width=\"60%\" /></TableCell>\r\n\r\n                                                                <TableCell align=\"left\">  <Skeleton width=\"60%\" /></TableCell>\r\n\r\n\r\n\r\n\r\n                                                                <TableCell align=\"left\">\r\n                                                                    <Box sx={{ '& button': { m: 1 } }}>\r\n\r\n                                                                        <div>\r\n                                                                         \r\n                                                                            <Skeleton sx={{width:110}}/>\r\n                                                                            <Skeleton sx={{width:80}}/>\r\n\r\n\r\n                                                                        </div>\r\n                                                                    </Box>\r\n\r\n\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n\r\n                                                        </Fragment>\r\n                                                    );\r\n                                                } )}\r\n                                            {emptyRows > 0 && (\r\n                                                <TableRow style={{height: 53 * emptyRows}}>\r\n                                                    <TableCell colSpan={6}/>\r\n                                                </TableRow>\r\n                                            )}\r\n\r\n                                        </TableBody>\r\n\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </PerfectScrollbar>\r\n\r\n\r\n\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={USERLIST.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n        </Fragment>)\r\n\r\n}\r\nexport default SkeltonTable;\r\n","import { filter } from 'lodash';\r\nimport React, {Fragment, useEffect, useState} from 'react';\r\n// material\r\nimport {\r\n    Stack,\r\n    Container,\r\n    Typography,\r\n    Box,\r\n    Card,\r\n    TableContainer,\r\n    Table,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell,\r\n    Checkbox,\r\n    Avatar,\r\n    Button,\r\n    TablePagination,\r\n    Modal,\r\n    TextField,\r\n} from '@mui/material';\r\n// components\r\nimport ThemeConfig from \"../../themes/theme2\"\r\n\r\n\r\n\r\nimport axios from \"axios\";\r\nimport configData from \"../../config\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    ADD_USER,\r\n    CLICK,\r\n    CLOSE_DELETE_MODAL,\r\n    ClOSE_EDIT_MODAL,\r\n    CLOSE_MODAL,\r\n    INISIALIZE_USER, LOGOUT, UPDATE,\r\n} from \"../../store/actions\";\r\nimport {UserListHead, UserListToolbar} from \"./import/customer/@dashboard/user\";\r\nimport Scrollbar from \"./../../animation/NavigationScroll\";\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nimport SearchNotFound from \"./import/customer/SearchNotFound\";\r\nimport Modal_Delete_User from \"../modal/ModalDeleteWidgetUser\";\r\nimport Visualization_Info from \"../modal/Visualization_Info\";\r\nimport Modal_Edit_User from '../modal/EditUser'\r\nimport Cells from \"./cells\";\r\nimport { useHistory} from \"react-router-dom\";\r\n\r\nimport RegistreModal from \"../modal/RegistreModal\";\r\n\r\nimport {\r\n    useMediaQuery, useTheme\r\n} from \"@material-ui/core\";\r\n\r\nimport {strengthColor, strengthIndicator} from \"../../verification_password/password-strength\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport SkeltonTable from \"../../composant_de_style/cards/Skeleton/tableSkelton/TableSkelton\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n    modal:{\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 600,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        pt: 2,\r\n        px: 4,\r\n        pb: 3,\r\n\r\n\r\n\r\n    },\r\n\r\n\r\n    redButton: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.grey[50],\r\n        border: '1px solid',\r\n        borderColor: theme.palette.grey[100],\r\n        color: theme.palette.grey[700],\r\n        textTransform: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.light\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '0.875rem'\r\n        }\r\n    },\r\n    signDivider: {\r\n        flexGrow: 1\r\n    },\r\n    signText: {\r\n        cursor: 'unset',\r\n        margin: theme.spacing(2),\r\n        padding: '5px 56px',\r\n        borderColor: theme.palette.grey[100] + ' !important',\r\n        color: theme.palette.grey[900] + '!important',\r\n        fontWeight: 500\r\n    },\r\n    loginIcon: {\r\n        marginRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '8px'\r\n        }\r\n    },\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    },\r\n\r\n    root: {\r\n        alignSelf: 'center',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: \"none\",\r\n\r\n\r\n    },\r\n    large: {\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n    },\r\n\r\n\r\n}));\r\n\r\n\r\n\r\n\r\nconst TABLE_HEAD = [\r\n    { id: 'username', label: 'User name', alignRight: 'left' },\r\n\r\n\r\n    {  id: 'action', label: 'Activites', alignRight: 'left' }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(array, comparator, query) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    if (query) {\r\n        return filter(array, (_user) => (_user.phone).toString().indexOf(query.toLowerCase()) !== -1||_user.username.toLowerCase().indexOf(query.toLowerCase()) !== -1||_user.email.toLowerCase().indexOf(query.toLowerCase()) !== -1||_user.email.toLowerCase().indexOf(query.toLowerCase()) !== -1||_user.role.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n    }\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst User=  (props) => {\r\n\r\n    const states = [\r\n        {\r\n            value: 'administrateur',\r\n            label: 'administrateur'\r\n        },\r\n        {\r\n            value: 'simple employer',\r\n            label: 'simple employer'\r\n        },\r\n\r\n    ];\r\n    const [source, setSource] = React.useState(\"/static/images/avatar_1.png\");\r\n\r\n    const handleCapture = ({target}) => {\r\n        const fileReader = new FileReader();\r\n        // const name = target.accept.includes('image') ? 'images' : 'videos';\r\n\r\n        fileReader.readAsDataURL(target.files[0]);\r\n        fileReader.onload = (e) => {\r\n            setSource(e.target.result);\r\n        };\r\n    };\r\n\r\n\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n    const [strength, setStrength] = React.useState(0);\r\n    const [level, setLevel] = React.useState('');\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changePassword = (value) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        changePassword('123456');\r\n    }, []);\r\n\r\n    const [isloading, setIsloading] = useState(false);\r\n    //const [openModal,setOpenModal]=useState(false);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const [open5, setOpen5] = React.useState(false);\r\n    const handleOpen5 = () => {\r\n        setOpen5(true);\r\n    };\r\n    const handleClose5= () => {\r\n        setOpen5(false);\r\n    };\r\n    let history = useHistory();\r\n\r\n    const dispatcher = useDispatch();\r\n\r\n    let account = useSelector((state) => state.account);\r\n    let userSt= useSelector((state) => state.user);\r\n\r\n    const [success,setSucess]=useState(false)\r\n    const [USERLIST,setUSERLIST]=useState([])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatcher({\r\n                type:CLOSE_MODAL,\r\n\r\n            });\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        axios\r\n            .post(configData.API_SERVER + 'api/users/all', {\r\n                id:account.user._id,\r\n                user_id:account.user._id,\r\n                token: account.token\r\n            }).then((result) => {\r\n            if(result.data.notConnected){\r\n                dispatcher({ type: LOGOUT });\r\n                history.push(\"/login\");\r\n                history.go(0)\r\n\r\n                dispatcher({\r\n                    type:CLICK,\r\n                    payload: {text:\"You are no longer connected\",severity:\"error\"}\r\n                })\r\n\r\n            }\r\n            else if(result.data.administratorProblem)\r\n            {\r\n                dispatcher({\r\n                    type:UPDATE,\r\n                    payload: {user:result.data.user}\r\n                });\r\n                history.push(configData.defaultPath)\r\n                dispatcher({\r\n                    type:CLICK,\r\n                    payload: {text:'You are no longer an administrateur',severity:\"error\"}\r\n                });\r\n            }\r\n            else{\r\n\r\n                dispatcher({\r\n                    type:INISIALIZE_USER,\r\n                    payload: {users:result.data.users},\r\n                })\r\n                setUSERLIST(userSt.users)\r\n                setSucess(true)\r\n\r\n            }})},[] );\r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatcher({\r\n                type:CLOSE_DELETE_MODAL,\r\n\r\n            });\r\n        }\r\n    }, [])\r\n    const [page, setPage] = useState(0);\r\n    const [order, setOrder] = useState('asc');\r\n    const [selected, setSelected] = useState([]);\r\n    const [orderBy, setOrderBy] = useState('username');\r\n    const [filterName, setFilterName] = useState('');\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = userSt.users.map((n) => n.username);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n        setSelected(newSelected);\r\n    };\r\n\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleFilterByName = (event) => {\r\n        setFilterName(event.target.value);\r\n    };\r\n\r\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userSt.users.length) : 0;\r\n\r\n    const filteredUsers = applySortFilter(userSt.users, getComparator(order, orderBy), filterName);\r\n\r\n    const isUserNotFound = filteredUsers.length === 0;\r\n\r\n    let open = useSelector((state) => state.modal);\r\n    function handleCloseModal  () {\r\n        dispatcher({\r\n            type:CLOSE_DELETE_MODAL,\r\n\r\n        });\r\n    };\r\n    function handleCloseEditModal  () {\r\n        dispatcher({\r\n            type:ClOSE_EDIT_MODAL,\r\n\r\n        });\r\n    };\r\n    let open1 = useSelector((state) => state.modal);\r\n\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const matchDownLG = useMediaQuery(theme.breakpoints.down('lg'));\r\n    const matchDownMD= useMediaQuery(theme.breakpoints.down('md'));\r\n    const matchDownXL = useMediaQuery(theme.breakpoints.down('xl'));\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n\r\n            <Card xs={12}  sx={{mb:3}}>\r\n\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mt={1} mb={1}>\r\n\r\n\r\n                    <Typography sx={{ml:1,mb:1,mt:1}} variant=\"h4\" gutterBottom>\r\n                        User Liste\r\n                    </Typography>\r\n                </Stack>\r\n\r\n            </Card>\r\n            <ThemeConfig>\r\n\r\n                <Card >\r\n                    {success?(\r\n                        <Fragment>\r\n                            <UserListToolbar sx={{minWidth:\"100%\"}}\r\n                                             numSelected={selected.length}\r\n                                             filterName={filterName}\r\n                                             onFilterName={handleFilterByName}\r\n                            />\r\n\r\n                            <PerfectScrollbar>\r\n                                <TableContainer sx={{minWidth:\"100%\"}} >\r\n                                    <Table  sx={{ml:2 ,minWidth:\"30%\"}} >\r\n                                        <UserListHead\r\n                                            order={order}\r\n                                            orderBy={orderBy}\r\n                                            headLabel={TABLE_HEAD}\r\n                                            rowCount={userSt.users.length}\r\n                                            numSelected={selected.length}\r\n                                            onRequestSort={handleRequestSort}\r\n                                            onSelectAllClick={handleSelectAllClick}\r\n                                        />\r\n                                        <TableBody  >\r\n                                            {filteredUsers\r\n                                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                                .map((row) => {\r\n\r\n\r\n                                                    const {_id, username, email, phone,role,photo} = row;\r\n                                                    const isItemSelected = selected.indexOf(username) !== -1;\r\n\r\n                                                    return (\r\n                                                        <Fragment >\r\n                                                            <TableRow\r\n                                                                hover\r\n                                                                key={_id}\r\n                                                                tabIndex={-1}\r\n                                                                role=\"checkbox\"\r\n                                                                selected={isItemSelected}\r\n                                                                aria-checked={isItemSelected}\r\n                                                                sx={{minWidth:\"100%\"}}\r\n                                                            >\r\n\r\n                                                                <Cells    userPar={{_id,username,phone,role,photo,email}}/>\r\n                                                            </TableRow>\r\n\r\n                                                        </Fragment>\r\n                                                    );\r\n                                                } )}\r\n                                            {emptyRows > 0 && (\r\n                                                <TableRow style={{height: 53 * emptyRows}}>\r\n                                                    <TableCell colSpan={6}/>\r\n                                                </TableRow>\r\n                                            )}\r\n\r\n                                        </TableBody>\r\n                                        {isUserNotFound && (\r\n                                            <TableBody>\r\n                                                <TableRow>\r\n                                                    <TableCell align=\"center\" colSpan={6} sx={{py: 3}}>\r\n                                                        <SearchNotFound searchQuery={filterName}/>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </TableBody>\r\n                                        )}\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </PerfectScrollbar>\r\n\r\n                            <TablePagination\r\n                                rowsPerPageOptions={[5, 10, 25]}\r\n                                component=\"div\"\r\n                                count={userSt.users.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                onPageChange={handleChangePage}\r\n                                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                            />\r\n                        </Fragment>\r\n                    ):(<SkeltonTable/>)}\r\n                </Card>\r\n            </ThemeConfig>\r\n\r\n            {open.ModalDeleteState && (<Modal_Delete_User  handleClose={handleCloseModal} type={\"User\"}/>)}\r\n            {open.ModalEditState&&(<Modal_Edit_User  type={\"User\"} />)}\r\n            {open.ModalInformation&&(<Visualization_Info  type={\"User\"} />)}\r\n\r\n            <RegistreModal/>\r\n            {/* <EditUser user={open.objet}/>*/}\r\n\r\n        </Fragment>\r\n    )\r\n        ;\r\n}\r\nexport default User;"],"sourceRoot":""}